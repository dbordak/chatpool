* (done) Show chat invitation when pool>0
* Email transcript
  - figure out how to use sendmail?
* Rep rating
  - requires an additional table (see below)
* Provide active-panel info to rep
* API
  - /api/v1/rep/list        GET list of reps
  - /api/v1/rep/:id/name    GET, POST rep's name
  - /api/v1/rep/:id/conv    GET list of conversations involving rep :id
  - /api/v1/conv/:id        GET, DELETE conversation
* (done) DB
  - rep table [name, id, uid]
  - conv table [user-uid, rep-id, active]
  - cust table [name, email, uid, active-panel?]
  - message table [from, body, conv-id]
  - rating table [cust, rep, message, score]

  - id = row id, uid = socket identifier. Customers do not have ids
    (technically they still do, it's just hidden), since they are only
    identified by the current session (e.g. if they log out and log
    in, the server will generate a new uid for them -- the old db
    entry is no longer used.)
* UPDATE: split names into first/last
  - reflect this in UI or just hide it?
* Make it look better
* Session persistence?
* Docker
* (done) Heroku?
* Confirmation message (modal) when quitting chat. Verify intent and
  desire for transcript.
* Reps should not be able to close the chat panel.
* (done) Chat message server->client... messages... should contain
  whether the sender is the rep or cust for CSS purposes.
* Test customer ending chat and starting another.
